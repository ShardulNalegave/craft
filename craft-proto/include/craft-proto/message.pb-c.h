/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: message.proto */

#ifndef PROTOBUF_C_message_2eproto__INCLUDED
#define PROTOBUF_C_message_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protobuf-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1005001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protobuf-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protobuf-c.
#endif


typedef struct CRAFTRequestVoteReq CRAFTRequestVoteReq;
typedef struct CRAFTRequestVoteRes CRAFTRequestVoteRes;
typedef struct CRAFTAppendEntriesReq CRAFTAppendEntriesReq;
typedef struct CRAFTAppendEntriesRes CRAFTAppendEntriesRes;
typedef struct CRAFTLogEntry CRAFTLogEntry;


/* --- enums --- */


/* --- messages --- */

struct  CRAFTRequestVoteReq
{
  ProtobufCMessage base;
  uint32_t candidateid;
  uint64_t term;
  uint64_t lastlogindex;
  uint64_t lastlogterm;
};
#define CRAFTREQUEST_VOTE_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&craftrequest_vote_req__descriptor) \
    , 0, 0, 0, 0 }


struct  CRAFTRequestVoteRes
{
  ProtobufCMessage base;
  uint64_t term;
  protobuf_c_boolean votegranted;
};
#define CRAFTREQUEST_VOTE_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&craftrequest_vote_res__descriptor) \
    , 0, 0 }


struct  CRAFTAppendEntriesReq
{
  ProtobufCMessage base;
  uint32_t leaderid;
  uint64_t term;
  uint64_t prevlogindex;
  uint64_t prevlogterm;
  uint64_t leadercommit;
  size_t n_entries;
  CRAFTLogEntry **entries;
};
#define CRAFTAPPEND_ENTRIES_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&craftappend_entries_req__descriptor) \
    , 0, 0, 0, 0, 0, 0,NULL }


struct  CRAFTAppendEntriesRes
{
  ProtobufCMessage base;
  uint64_t term;
  protobuf_c_boolean votegranted;
};
#define CRAFTAPPEND_ENTRIES_RES__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&craftappend_entries_res__descriptor) \
    , 0, 0 }


struct  CRAFTLogEntry
{
  ProtobufCMessage base;
  uint64_t len;
  ProtobufCBinaryData data;
};
#define CRAFTLOG_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&craftlog_entry__descriptor) \
    , 0, {0,NULL} }


/* CRAFTRequestVoteReq methods */
void   craftrequest_vote_req__init
                     (CRAFTRequestVoteReq         *message);
size_t craftrequest_vote_req__get_packed_size
                     (const CRAFTRequestVoteReq   *message);
size_t craftrequest_vote_req__pack
                     (const CRAFTRequestVoteReq   *message,
                      uint8_t             *out);
size_t craftrequest_vote_req__pack_to_buffer
                     (const CRAFTRequestVoteReq   *message,
                      ProtobufCBuffer     *buffer);
CRAFTRequestVoteReq *
       craftrequest_vote_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   craftrequest_vote_req__free_unpacked
                     (CRAFTRequestVoteReq *message,
                      ProtobufCAllocator *allocator);
/* CRAFTRequestVoteRes methods */
void   craftrequest_vote_res__init
                     (CRAFTRequestVoteRes         *message);
size_t craftrequest_vote_res__get_packed_size
                     (const CRAFTRequestVoteRes   *message);
size_t craftrequest_vote_res__pack
                     (const CRAFTRequestVoteRes   *message,
                      uint8_t             *out);
size_t craftrequest_vote_res__pack_to_buffer
                     (const CRAFTRequestVoteRes   *message,
                      ProtobufCBuffer     *buffer);
CRAFTRequestVoteRes *
       craftrequest_vote_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   craftrequest_vote_res__free_unpacked
                     (CRAFTRequestVoteRes *message,
                      ProtobufCAllocator *allocator);
/* CRAFTAppendEntriesReq methods */
void   craftappend_entries_req__init
                     (CRAFTAppendEntriesReq         *message);
size_t craftappend_entries_req__get_packed_size
                     (const CRAFTAppendEntriesReq   *message);
size_t craftappend_entries_req__pack
                     (const CRAFTAppendEntriesReq   *message,
                      uint8_t             *out);
size_t craftappend_entries_req__pack_to_buffer
                     (const CRAFTAppendEntriesReq   *message,
                      ProtobufCBuffer     *buffer);
CRAFTAppendEntriesReq *
       craftappend_entries_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   craftappend_entries_req__free_unpacked
                     (CRAFTAppendEntriesReq *message,
                      ProtobufCAllocator *allocator);
/* CRAFTAppendEntriesRes methods */
void   craftappend_entries_res__init
                     (CRAFTAppendEntriesRes         *message);
size_t craftappend_entries_res__get_packed_size
                     (const CRAFTAppendEntriesRes   *message);
size_t craftappend_entries_res__pack
                     (const CRAFTAppendEntriesRes   *message,
                      uint8_t             *out);
size_t craftappend_entries_res__pack_to_buffer
                     (const CRAFTAppendEntriesRes   *message,
                      ProtobufCBuffer     *buffer);
CRAFTAppendEntriesRes *
       craftappend_entries_res__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   craftappend_entries_res__free_unpacked
                     (CRAFTAppendEntriesRes *message,
                      ProtobufCAllocator *allocator);
/* CRAFTLogEntry methods */
void   craftlog_entry__init
                     (CRAFTLogEntry         *message);
size_t craftlog_entry__get_packed_size
                     (const CRAFTLogEntry   *message);
size_t craftlog_entry__pack
                     (const CRAFTLogEntry   *message,
                      uint8_t             *out);
size_t craftlog_entry__pack_to_buffer
                     (const CRAFTLogEntry   *message,
                      ProtobufCBuffer     *buffer);
CRAFTLogEntry *
       craftlog_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   craftlog_entry__free_unpacked
                     (CRAFTLogEntry *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*CRAFTRequestVoteReq_Closure)
                 (const CRAFTRequestVoteReq *message,
                  void *closure_data);
typedef void (*CRAFTRequestVoteRes_Closure)
                 (const CRAFTRequestVoteRes *message,
                  void *closure_data);
typedef void (*CRAFTAppendEntriesReq_Closure)
                 (const CRAFTAppendEntriesReq *message,
                  void *closure_data);
typedef void (*CRAFTAppendEntriesRes_Closure)
                 (const CRAFTAppendEntriesRes *message,
                  void *closure_data);
typedef void (*CRAFTLogEntry_Closure)
                 (const CRAFTLogEntry *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor craftrequest_vote_req__descriptor;
extern const ProtobufCMessageDescriptor craftrequest_vote_res__descriptor;
extern const ProtobufCMessageDescriptor craftappend_entries_req__descriptor;
extern const ProtobufCMessageDescriptor craftappend_entries_res__descriptor;
extern const ProtobufCMessageDescriptor craftlog_entry__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_message_2eproto__INCLUDED */
